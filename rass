#!/usr/bin/env python3
# Author: Edoardo Paolo Scalafiotti <edoardo849@gmail.com>
import os
from time import sleep
import signal
import sys
import Adafruit_DHT
import RPi.GPIO as GPIO

from RPLCD import CharLCD

pin = 2 # The pin ID, edit here to change it
maxTMP = 50 # The maximum temperature in Celsius after which we trigger the fan
sleepTime = 30 # The time to sleep between temp checks

lcd = CharLCD(cols=16, rows=2, pin_rs=37, pin_e=35, pins_data=[33, 31, 29, 23])

humidity, temperature = Adafruit_DHT.read_retry(11, 4)

temperature = temperature * 9/5.0 + 32

def setup():
    GPIO.setmode(GPIO.BCM)
    GPIO.setup(pin, GPIO.OUT)
    GPIO.setwarnings(False)
    return()
	
	
def fanON():
    print("Fan on ...")
    setPin(True)
    return()
	
def fanOFF():
    print("Fan off ...")
    setPin(False)
    return()
	
def getTEMP():
    CPU_temp = float(temperature)
    if CPU_temp > maxTMP:
        fanON()
        sleep(sleepTime) # Sleep additional time in order to ensure that we stay below max temp ...
    else:
        fanOFF()
    return()
	
def setPin(mode): # A little redundant function but useful if you want to add logging
    GPIO.output(pin, mode)
    return()
	
while True:
    humidity, temperature = Adafruit_DHT.read_retry(11, 4)

    lcd.cursor_pos = (0, 0)
    lcd.write_string("Temp: %d C" % temperature)
    lcd.cursor_pos = (1, 0)
    lcd.write_string("Humidity: %d %%" % humidity)

try:
    setup() 
    while True:
        getTEMP()
        sleep(sleepTime) # Read the temperature every x amount of seconds ...
except KeyboardInterrupt: # trap a CTRL+C keyboard interrupt 
    GPIO.cleanup() # resets all GPIO ports used by this script
